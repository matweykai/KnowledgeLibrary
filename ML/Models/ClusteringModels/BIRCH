BIRCH(Balanced Iterative Reducing & Clustering using Hierarchy) - это алгоритм
	англомеративной кластеризации, который быстро работает, эффективен по
	памяти и даёт хорошее качество кластеризации

* Данный алгоритм использует понятие Clustering Features (CFs) - это 
  промежуточные признаки, которые позволяют описать набор векторов в сжатом
  формате 
	CF = (n, LS, SS), где 
		n - кол-во векторов, 
		LS - сумма значений векторов LS = sum(x_i) {i: 1 до n}
		SS - сумма квадратов векторов SS = sum(x_i^2) {i: 1 до n}

* CF позволяет получать другие характеристики кластера достаточно просто:

	X_0 = LS / n - центроид кластера
	R = sqrt((n(SS) - 2*LS^2 - n(LS)) / n^2) - радиус кластера
	D = sqrt((2*n(SS) - 2*(LS)^2) / n(n-1)) - диаметр кластера

* Важными особенностями CF является их возможность к сложению и маленький 
  размер информации, которая описывает кластер

* Суть алгоритма состоит в построении дерева иерархий на основе CF признаков
  (1 фаза) и выделении кластеров на основе дерева (2 фаза)

Алгоритм:
	1. Задаются параметры 
	   Diameter Threshold - максимальный диаметр субкластера в листе
	   Branching Factor - максимальное количество 
	
	2. Корень заполняется объектами

	3. Добавляем новый объект к тому подкластеру, к чьему центроиду он ближе

	4. Если при добавлении этого объектра диаметр увеличивается слишком 
	   сильно, то одну из его свободных ячеек занимает новый объект

	5. Если свободных ячеек нет, то кластер разбивается на подкластеры, 
	   где появляются свободные ячейки

	6. Возвращаемся на шаг 3, пока не распределим все объекты

* При построении дерева кластеры могут перепрыгивать с полочки на полочку, 
  одного уровня, чтобы дерево получалось сбалансированным

Достоинства и недостатки:
 - Малые затраты памяти
 - Быстрая скорость работы O(n)
 - Кластеры получаются сферической формы

Статьи:
 - https://medium.com/@vipulddalal/birch-algorithm-with-working-example-a7b8fe047bd4
